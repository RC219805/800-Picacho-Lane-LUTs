name: Optimized CI
permissions:
  contents: read

on:
  push:
    branches: [main, develop]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/**'
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_COMPILE: "1"
  COVERAGE_CORE: sysmon  # Python 3.12+ optimization

jobs:
  quick-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For changed files detection
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Get changed files
        id: changed
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47
        with:
    # GitHub API URL.
    # Type: string
    # Default: "${{ github.api_url }}"
    api_url: ''

    # Specify a different base commit 
    # SHA or branch used for 
    # comparing changes 
    # Type: string
    base_sha: ''

    # Exclude changes outside the current 
    # directory and show path names 
    # relative to it. NOTE: This 
    # requires you to specify the 
    # top-level directory via the `path` 
    # input. 
    # Type: boolean
    # Default: "true"
    diff_relative: ''

    # Output unique changed directories instead 
    # of filenames. NOTE: This returns 
    # `.` for changed files located 
    # in the current working directory 
    # which defaults to `$GITHUB_WORKSPACE`. 
    # Type: boolean
    # Default: "false"
    dir_names: ''

    # Include only directories that have 
    # been deleted as opposed to 
    # directory names of files that 
    # have been deleted in the 
    # `deleted_files` output when `dir_names` is 
    # set to `true`. 
    # Type: boolean
    # Default: "false"
    dir_names_deleted_files_include_only_deleted_dirs: ''

    # Exclude the current directory represented 
    # by `.` from the output 
    # when `dir_names` is set to 
    # `true`. 
    # Type: boolean
    # Default: "false"
    dir_names_exclude_current_dir: ''

    # File and directory patterns to 
    # include in the output when 
    # `dir_names` is set to `true`. 
    # NOTE: This returns only the 
    # matching files and also the 
    # directory names. 
    # Type: string
    dir_names_include_files: ''

    # Separator used to split the 
    # `dir_names_include_files` input 
    # Type: string
    # Default: "\n"

    # Limit the directory output to 
    # a maximum depth e.g `test/test1/test2` 
    # with max depth of `2` 
    # returns `test/test1`. 
    # Type: string

    # Escape JSON output.
    # Type: boolean
    # Default: "true"

    # Exclude changes to submodules.
    # Type: boolean
    # Default: "false"

    # Fail when the initial diff 
    # fails. 
    # Type: boolean
    # Default: "false"

    # Fail when the submodule diff 
    # fails. 
    # Type: boolean
    # Default: "false"
    fail_on_submodule_diff_error: ''

    # Fetch additional history for submodules.
    # Type: boolean
    # Default: "false"
    fetch_additional_submodule_history: ''

    # Depth of additional branch history 
    # fetched. NOTE: This can be 
    # adjusted to resolve errors with 
    # insufficient history. 
    # Type: string
    # Default: "25"
    fetch_depth: ''

    # Maximum number of retries to 
    # fetch missing history. 
    # Type: string
    # Default: "20"
    fetch_missing_history_max_retries: ''

    # File and directory patterns used 
    # to detect changes (Defaults to the entire repo if unset). NOTE: 
    # Multiline file/directory patterns should not 
    # include quotes. 
    # Type: string
    files: ''

    # Source file(s) used to populate 
    # the `files` input. 
    # Type: string
    files_from_source_file: ''

    # Separator used to split the 
    # `files_from_source_file` input. 
    # Type: string
    # Default: "\n"
    files_from_source_file_separator: ''

    # Ignore changes to these file(s). 
    # NOTE: Multiline file/directory patterns should 
    # not include quotes. 
    # Type: string
    files_ignore: ''

    # Source file(s) used to populate 
    # the `files_ignore` input 
    # Type: string
    files_ignore_from_source_file: ''

    # Separator used to split the 
    # `files_ignore_from_source_file` input 
    # Type: string
    # Default: "\n"
    files_ignore_from_source_file_separator: ''

    # Separator used to split the 
    # `files_ignore` input 
    # Type: string
    # Default: "\n"
    files_ignore_separator: ''

    # YAML used to define a 
    # set of file patterns to 
    # ignore changes 
    # Type: string
    files_ignore_yaml: ''

    # Source file(s) used to populate 
    # the `files_ignore_yaml` input. Example: https://github.com/tj-actions/changed-files/blob/main/test/changed-files.yml 
    # Type: string
    files_ignore_yaml_from_source_file: ''

    # Separator used to split the 
    # `files_ignore_yaml_from_source_file` input 
    # Type: string
    # Default: "\n"
    files_ignore_yaml_from_source_file_separator: ''

    # Separator used to split the 
    # `files` input 
    # Type: string
    # Default: "\n"
    files_separator: ''

    # YAML used to define a 
    # set of file patterns to 
    # detect changes 
    # Type: string
    files_yaml: ''

    # Source file(s) used to populate 
    # the `files_yaml` input. Example: https://github.com/tj-actions/changed-files/blob/main/test/changed-files.yml 
    # Type: string
    files_yaml_from_source_file: ''

    # Separator used to split the 
    # `files_yaml_from_source_file` input 
    # Type: string
    # Default: "\n"
    files_yaml_from_source_file_separator: ''

    # Include `all_old_new_renamed_files` output. Note this 
    # can generate a large output 
    # See: #501. 
    # Type: boolean
    # Default: "false"
    include_all_old_new_renamed_files: ''

    # Output list of changed files 
    # in a JSON formatted string 
    # which can be used for 
    # matrix jobs. Example: https://github.com/tj-actions/changed-files/blob/main/.github/workflows/matrix-example.yml 
    # Type: boolean
    # Default: "false"
    json: ''

    # Output changed files in a 
    # format that can be used 
    # for matrix jobs. Alias for 
    # setting inputs `json` to `true` 
    # and `escape_json` to `false`. 
    # Type: boolean
    # Default: "false"
    matrix: ''

    # Apply the negation patterns first. 
    # NOTE: This affects how changed 
    # files are matched. 
    # Type: boolean
    # Default: "false"
    negation_patterns_first: ''

    # Split character for old and 
    # new renamed filename pairs. 
    # Type: string
    # Default: " "
    old_new_files_separator: ''

    # Split character for old and 
    # new filename pairs. 
    # Type: string
    # Default: ","
    old_new_separator: ''

    # Directory to store output files.
    # Type: string
    # Default: ".github/outputs"
    output_dir: ''

    # Output renamed files as deleted 
    # and added files. 
    # Type: boolean
    # Default: "false"


    # Specify a relative path under 
    # `$GITHUB_WORKSPACE` to locate the repository. 
    # Type: string
    # Default: "."


    # Use non-ASCII characters to match 
    # files and output the filenames 
    # completely verbatim by setting this 
    # to `false` 
    # Type: boolean
    # Default: "true"


    # Recover deleted files.
    # Type: boolean
    # Default: "false"


    # Recover deleted files to a 
    # new destination directory, defaults to 
    # the original location. 
    # Type: string
    # File and directory patterns used 
    # to recover deleted files, defaults 
    # to the patterns provided via 
    # the `files`, `files_from_source_file`, `files_ignore` and 
    # `files_ignore_from_source_file` inputs or all deleted 
    # files if no patterns are 
    # provided. 
    # Type: string
    recover_files: ''

    # File and directory patterns to 
    # ignore when recovering deleted files. 
    # Type: string
    recover_files_ignore: ''

    # Separator used to split the 
    # `recover_files_ignore` input 
    # Type: string
    # Default: "\n"
    recover_files_ignore_separator: ''

    # Separator used to split the 
    # `recover_files` input 
    # Type: string
    # Default: "\n"
    recover_files_separator: ''

    # Apply sanitization to output filenames 
    # before being set as output. 
    # Type: boolean
    # Default: "true"
    safe_output: ''

    # Split character for output strings.
    # Type: string
    # Default: " "
    separator: ''

    # Specify a different commit SHA 
    # or branch used for comparing 
    # changes 
    # Type: string
    sha: ''

    # Get changed files for commits 
    # whose timestamp is older than 
    # the given time. 
    # Type: string
    since: ''

    # Use the last commit on 
    # the remote branch as the 
    # `base_sha`. Defaults to the last 
    # non-merge commit on the target 
    # branch for pull request events 
    # and the previous remote commit 
    # of the current branch for 
    # push events. 
    # Type: boolean
    # Default: "false"
    since_last_remote_commit: ''

    # Skip initially fetching additional history 
    # to improve performance for shallow 
    # repositories. NOTE: This could lead 
    # to errors with missing history. 
    # It's intended to be used 
    # when you've fetched all necessary 
    # history to perform the diff. 
    # Type: boolean
    # Default: "false"
    skip_initial_fetch: ''

    # Tags pattern to ignore.
    # Type: string
    tags_ignore_pattern: ''

    # Tags pattern to include.
    # Type: string
    # Default: "*"
    tags_pattern: ''

    # GitHub token used to fetch 
    # changed files from GitHub's API. 
    # Type: string
    # Default: "${{ github.token }}"

    # Get changed files for commits 
    # whose timestamp is earlier than 
    # the given time. 
    # Type: string
    until: ''

    # Use POSIX path separator `/` 
    # for output file paths on 
    # Windows. 
    # Type: boolean
    # Default: "false"
    use_posix_path_separator: ''

    # Force the use of Github's 
    # REST API even when a 
    # local copy of the repository 
    # exists 
    # Type: boolean
    # Default: "false"
    use_rest_api: ''

    # Write outputs to the `output_dir` 
    # defaults to `.github/outputs` folder. NOTE: 
    # This creates a `.txt` file 
    # by default and a `.json` 
    # file if `json` is set 
    # to `true`. 
    # Type: boolean
    # Default: "false"
    write_output_files: ''

      
      
      
      - name: Fast security scan (changed files only)
        if: steps.changed.outputs.any_changed == 'true'
        run: |
          pip install bandit
          bandit -r ${{ steps.changed.outputs.all_changed_files }}
      
      - name: Quick lint
        if: steps.changed.outputs.any_changed == 'true'
        run: |
          pip install ruff
          ruff check ${{ steps.changed.outputs.all_changed_files }}

  test:
    needs: quick-checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ['3.10', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -e .[test]
          pip install pytest-xdist  # Parallel execution
      
      - name: Run tests (parallel)
        run: |
          pytest -n auto \
            --cov=src \
            --cov-report=xml \
            --cov-report=term-missing \
            --durations=10
      
      - name: Upload coverage
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
