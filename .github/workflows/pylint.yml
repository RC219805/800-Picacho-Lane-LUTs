# file: .github/workflows/pylint.yml
name: pylint

on:
  pull_request:
    paths: ["**/*.py"]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            requirements.txt
            requirements-ci.txt

      - name: Cache Pylint cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pylint
          key: ${{ runner.os }}-pylint-${{ hashFiles('.pylintrc', 'pyproject.toml', 'requirements-ci.txt') }}-3.12
          restore-keys: |
            ${{ runner.os }}-pylint-

      - name: Install pinned CI tools + project (lean)
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
          PIP_PROGRESS_BAR: "off"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
          pip install -e ".[dev-lean]"

      - name: Verify pinned tool versions
        run: |
          python -m pip show mypy
          python -m pip show pylint
          python -m pip show flake8
          python -m pip show pytest-cov

      - name: Generate legacy shims from tests (fail if new shims are needed)
        run: python tools/gen_legacy_shims.py --fail-on-create

      # --- mypy cache + type checking ---
      - name: Restore mypy cache
        uses: actions/cache/restore@v4
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-mypy-3.12-${{ hashFiles('pyproject.toml', 'mypy.ini', 'setup.cfg', 'requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-mypy-3.12-
            ${{ runner.os }}-mypy-

      - name: Type check (mypy)
        run: |
          mypy --version
          mypy .

      - name: Save mypy cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-mypy-3.12-${{ hashFiles('pyproject.toml', 'mypy.ini', 'setup.cfg', 'requirements-ci.txt') }}

      # --- sanity imports (fail early) ---
      - name: Sanity imports (fail early with context)
        run: |
          python - <<'PY'
          import importlib, sys
          try:
              importlib.import_module('src.evolutionary')
              importlib.import_module('evolutionary_checkpoint')
              print("✅ import sanity OK")
          except Exception as e:
              print(f"❌ Import sanity failed: {e}")
              sys.exit(2)
          PY

      # --- pylint ---
      - name: Run Pylint
        shell: bash
        run: |
          set -euo pipefail
          git ls-files -z '*.py' > pyfiles.z || true
          if [ ! -s pyfiles.z ]; then
            echo "No Python files to lint."
            exit 0
          fi
          # Pylint 3 expects {old,new}; explicitly set to 'old' for % formatting.
          pylint -j 0 --fail-under=8.0 --logging-format-style=old $(tr '\0' ' ' < pyfiles.z)
