# file: .github/workflows/shim-sync.yml
name: shim-sync

on:
  workflow_dispatch:
    inputs:
      modules:
        description: "Limit scan to globs (comma-separated), e.g. 'tests/test_*.py,tests/smoke/**.py'"
        required: false
        default: ""
      dry_run:
        description: "Report only (do not write/commit shims)"
        required: false
        type: boolean
        default: false
      commit_message:
        description: "Commit message when writing shims"
        required: false
        default: "ci(shims): add/update legacy shims from tests"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync-shims:
    runs-on: ubuntu-24.04
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      # Ensure src/ is importable for importlib checks inside the generator
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install minimal Python tooling
        run: |
          python -m pip install --upgrade pip

      - name: Build generator args
        id: args
        shell: bash
        run: |
          set -euo pipefail
          ARGS=""
          if [[ -n "${{ github.event.inputs.modules }}" ]]; then
            # pass modules once; script supports comma-separated patterns
            ARGS+=" --modules ${{ github.event.inputs.modules }}"
          fi
          echo "args=${ARGS}" >> "$GITHUB_OUTPUT"

      - name: Scan (report only)
        run: |
          python tools/gen_legacy_shims.py --json --report ${{ steps.args.outputs.args }} | tee shim-report.json

      - name: Upload shim scan report
        uses: actions/upload-artifact@v4
        with:
          name: shim-report
          path: shim-report.json
          if-no-files-found: error
          retention-days: 7

      - name: Generate shims (write)
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          python tools/gen_legacy_shims.py --write ${{ steps.args.outputs.args }}

      - name: Commit shims (if any)
        if: ${{ github.event.inputs.dry_run != 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: ${{ github.event.inputs.commit_message }}
          commit_user_name: github-actions
          commit_user_email: github-actions@users.noreply.github.com
          file_pattern: "*.py"
